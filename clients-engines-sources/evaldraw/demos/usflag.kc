()
{
   gldisable(GL_DEPTH_TEST);
   static whitepix = 0xffffff; glsettex(whitepix,1,1);
   enum {MUSICN=128};
   static music[MUSICN][3] =
   {
      67, 0,1, 64, 0,1, 60,48,2, 64,48,2, 67,47,2, 72,45,4,  0, 0,0,  0, 0,0,
      76,44,1, 74,44,1, 72,45,2, 64,45,2, 66,38,2, 67,43,4,  0, 0,0,  0, 0,0,
      67, 0,1, 67, 0,1, 76,48,3, 74,48,1, 72,45,2, 71,43,4,  0, 0,0,  0, 0,0,
      69,45,1, 71,47,1, 72,48,2, 72,48,2, 67,43,2, 64,40,2, 60,36,2,  0, 0,0,
      67, 0,1, 64, 0,1, 60,48,2, 64,48,2, 67,47,2, 72,45,4,  0, 0,0,  0, 0,0,
      76,44,1, 74,44,1, 72,45,2, 64,45,2, 66,38,2, 67,43,4,  0, 0,0,  0, 0,0,
      67, 0,1, 67, 0,1, 76,48,3, 74,48,1, 72,45,2, 71,43,4,  0, 0,0,  0, 0,0,
      69,45,1, 71,47,1, 72,48,2, 72,48,2, 67,43,2, 64,40,2, 60,36,2,  0, 0,0,
      76,48,1, 76,48,1, 76,48,2, 77,50,2, 79,52,2, 79,52,4,  0, 0,0,  0, 0,0,
      77,50,1, 76,48,1, 74,47,2, 76,48,2, 77,50,2, 77,50,4,  0, 0,0,  0, 0,0,
      77,50,2, 76,48,3, 74,47,1, 72,45,2, 71,43,4,  0, 0,0,  0, 0,0,  0, 0,0,
      69,45,1, 71,47,1, 72,48,2, 64,40,2, 66,42,2, 67,43,4,  0, 0,0,  0, 0,0,
      67,43,2, 72,40,2, 72,40,2, 72,40,1, 71,40,1, 69,41,2, 69,41,2,  0, 0,0,
      69, 0,2, 74,38,2, 77,38,1, 76,40,1, 74,41,1, 72,42,1, 72,43,2, 71,43,2,
      67, 0,1, 67, 0,1, 72,45,3, 74,45,1, 76,45,1, 77,45,1, 79,40,4,  0, 0,0,
      72,40,1, 74,40,1, 76,41,3, 77,41,1, 74,43,2, 72,36,4, 0, 0, 0,  0, 0,12,
   };
      //Generate flag texture
   enum {FXSIZ=1024,FYSIZ=512};
   static usflag[FYSIZ][FXSIZ];
   for(y=1;y<FYSIZ-1;y++)
      for(x=1;x<FXSIZ-1;x++)
         usflag[y][x] = genusflag(x/FXSIZ,y/FYSIZ);
   hflag = glsettex(usflag,FXSIZ,FYSIZ);

   playnote(0xc0,62,0);
   playnote(0xc1,81,0);

   tim = 0; ind = 0; lng = 0; offs = -6;
   while (1)
   {
      otim = tim; tim = klock();
      if (int(tim*8) != int(otim*8))
      {
         lng--;
         while (lng <= 0)
         {
            playnote(0x90,music[ind-3]+offs,0);
            playnote(0x91,music[ind-2]+offs,0);
            if (ind < MUSICN*3)
            {
               if (music[ind  ]) playnote(0x90,music[ind  ]+offs,64);
               if (music[ind+1]) playnote(0x91,music[ind+1]+offs,88);
               lng = music[ind+2];
               if (ind == (MUSICN-1)*3)
               {
                  playsound("blowup2.flac",100,.25);
                  playsound("blowup2.flac",100,.30);
               }
               ind += 3;
            } else { ind = 0; offs++; }
         }
      }
      
      //clz(1e32); 
      gldisable(GL_DEPTH_TEST);
      
         //Sky background
      glsettex("cloud.png"); setcol(0x4090c0);
      glbegin(GL_QUADS);
      gltexcoord(tim*-.1+0,tim*-.05+0); glvertex(   0,   0);
      gltexcoord(tim*-.1+4,tim*-.05+0); glvertex(xres,   0);
      gltexcoord(tim*-.1+4,tim*-.05+4); glvertex(xres,yres);
      gltexcoord(tim*-.1+0,tim*-.05+4); glvertex(   0,yres);
      
      setfont(xres/52,xres/52*1.75,1);
      moveto(xres/52*10,yres*.85);
      i = int(ind/24); setcol(0xffffff);
      if (i == 0) printf("        O! say can you see");
      if (i == 1) printf("     by the dawn's early light");
      if (i == 2) printf("     What so proudly we hailed");
      if (i == 3) printf("  at the twilight's last gleaming?");
      if (i == 4) printf("Whose broad stripes and bright stars");
      if (i == 5) printf("    through the perilous fight,");
      if (i == 6) printf("    O'er the ramparts we watched");
      if (i == 7) printf("    were so gallantly streaming?");
      if (i == 8) printf("    And the rockets' red glare,");
      if (i == 9) printf("     the bombs bursting in air,");
      if (i ==10) printf("    Gave proof through the night");
      if (i ==11) printf("   that our flag was still there.");
      if (i ==12) printf("   O! say does that star-spangled");
      if (i ==13) printf("          banner yet wave");
      if (i ==14) printf("     O'er the land of the free");
      if (i ==15) printf("    and the home of the brave?");

      

      setcol(0x202020);
      drawplane(  0,0,94.0-(tim%25.5)*4);
      drawplane(+.5,0,94.5-(tim%25.5)*4);
      drawplane(-.5,0,94.5-(tim%25.5)*4);
      drawplane(  1,0,95.0-(tim%25.5)*4);
      drawplane( -1,0,95.0-(tim%25.5)*4);

         //Draw flag
      glsettex(hflag);
      e = (1-exp(tim*-.5))*6;
      xn = 15.2; yn = 8; inc = 1/8;
      for(j=0;j<xn+yn;j+=inc)
      {
         glbegin(GL_QUADS);
         for(i=0;i<4;i++)
         {
            if (i >= 2) { if (j < xn) { xt = (i-2)*inc+j   ; yt =  0; }
                                 else { yt = (i-2)*inc+j-xn; xt = xn; } }
                   else { if (j < yn) { yt = (1-i)*inc+j   ; xt =  0; }
                                 else { xt = (1-i)*inc+j-yn; yt = yn; } }
               //The following wave motion is based on "Waves" by Matt Wandel
               //http://matt.wandel.ca/artwork/math_art.html
            t = xt+yt - tim*3;
            xp = cos(t)*e + xt*32;
            yp = sin(t)*e + yt*32;
            sc = 160-sin(t+1.5)*64; setcol(sc,sc,sc);
            gltexcoord(xt/15.2,yt/8);
            glvertex(xp-224,yp-128,384);
         }
      }

      setcol(0x808080);
      xt = 0; yt = 0;
      t = xt+yt - tim*3;
      xp = cos(t)*e + xt*32;
      yp = sin(t)*e + yt*32;
      drawcone(xp-224,yp-128,384,1,-2.8,-1.45,4,.01);
      xt = 0; yt = yn;
      t = xt+yt - tim*3;
      xp = cos(t)*e + xt*32;
      yp = sin(t)*e + yt*32;
      drawcone(xp-224,yp-128,384,1,-2.8,+1.45,4,.01);
         
         //Draw flagpole
      setcol(0x505060); drawcone(-2.8,-1.60,4,-.1,-2.8,+3,4,-.1);
      setcol(0x605040); drawsph(-2.8,-1.60,4,.15);
      
      refresh();
   }
}

drawplane (x,y,z)
{
   f = 1;
   drawcone(x*f,(y-2)*f,(z+4.0)*f,.02*f,x*f,(y-2)*f,(z+4.5)*f,.025*f);
   for(s=-1;s<=1;s+=2)
      drawcone((x-.15*s)*f,(y-2)*f,(z+4.3)*f,.015*f,x*f,(y-2.01)*f,(z+4.2)*f,.03*f);
   drawcone((x+.05)*f,(y-2)*f,(z+4.5)*f,.02*f,(x-.05)*f,(y-2)*f,(z+4.5)*f,.015*f);
}

genusflag (x,y)
{
   if ((x >= .4) || (y >= 7/13)) return((((y*13)%2) >= 1)*0xffff + 0xff0000);
   xsc = .0333; xx = floor(x/xsc+.5);
   ysc = .0528; yy = floor(y/ysc+.5);
   if ((fabs(xx-6) < 6) && (fabs(yy-5) < 5) && ((xx+yy+.5)%2 < 1))
   {
      fx = fabs(x-xx*xsc)*86; k0 = fx*sin(PI*.2);
      fy =     (y-yy*ysc)*48; k1 = fy*cos(PI*.2); k2 = cos(PI*.4);
      if ((max(k1+k0,-fy) < k2) || (max(k1-k0,fx*sin(PI*.4) - fy*k2) < k2)) return(0xffffff);
   }
   return(0x000070);
}