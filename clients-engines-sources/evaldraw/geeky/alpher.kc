   //08/24/2012: lut based on ALPHER.BAS
static lett[96][8] =
{
   0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 32
   0x4046,0x4848,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 33 !
   0x3031,0xd021,0x5051,0xd041,0x0000,0x0000,0x0000,0x0000, // 34 "
   0x3028,0x6058,0x1282,0x0676,0x0000,0x0000,0x0000,0x0000, // 35 #
   0x2181,0x1464,0x0868,0xd213,0xe423,0xa666,0x3039,0x5059, // 36 $
   0x8008,0x9211,0x9611,0x9277,0x9677,0x0000,0x0000,0x0000, // 37 %
   0x9441,0x3178,0x5134,0xa046,0x6674,0x3426,0x0000,0x0000, // 38 &
   0x4041,0xd031,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 39 '
   0xf384,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 40 (
   0xf704,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 41 )
   0x2464,0x3256,0x5236,0x0000,0x0000,0x0000,0x0000,0x0000, // 42 *
   0x2464,0x4246,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 43 +
   0x4647,0xd037,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 44 ,
   0x2464,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 45 -
   0x4848,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 46 .
   0x8008,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 47 /
   0xc244,0xc644,0x6127,0x0000,0x0000,0x0000,0x0000,0x0000, // 48 0
   0xd030,0x4048,0x3858,0x0000,0x0000,0x0000,0x0000,0x0000, // 49 1
   0xe422,0x2060,0xa662,0x6425,0x0708,0xe427,0x0888,0x0000, // 50 2
   0xa662,0xa666,0x2060,0x2464,0x2868,0xe422,0xe226,0x0000, // 51 3
   0x7870,0x6004,0x0405,0x0585,0x6070,0x0000,0x0000,0x0000, // 52 4
   0xa666,0x2868,0x0464,0x0080,0x0004,0xe226,0x0000,0x0000, // 53 5
   0xe226,0xa666,0x2060,0x2868,0x0464,0xe662,0xe422,0x0206, // 54 6
   0x0080,0x8081,0x8128,0x0001,0x0000,0x0000,0x0000,0x0000, // 55 7
   0xa222,0xa226,0xa662,0xa666,0x2060,0x2464,0x2868,0x0000, // 56 8
   0xe662,0xa222,0x6828,0x6020,0x8424,0xe226,0xe066,0x8682, // 57 9
   0x4343,0x4545,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 58 :
   0x4343,0x4546,0xd036,0x0000,0x0000,0x0000,0x0000,0x0000, // 59 ;
   0x6224,0x2466,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 60 <
   0x2363,0x2565,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 61 =
   0x2264,0x6426,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 62 >
   0x4848,0x4644,0xa642,0xe442,0x0000,0x0000,0x0000,0x0000, // 63 ?
   0xc244,0xb653,0xa244,0x4888,0x5256,0xd643,0xd045,0x4050, // 64 @
   0x4008,0x4088,0x2464,0x0000,0x0000,0x0000,0x0000,0x0000, // 65 A
   0x0008,0x0060,0x0464,0x0868,0xa662,0xa666,0x0000,0x0000, // 66 B
   0x4060,0x4868,0xc244,0xe662,0xe066,0x0000,0x0000,0x0000, // 67 C
   0x0040,0x0008,0x0848,0xc644,0x0000,0x0000,0x0000,0x0000, // 68 D
   0x0080,0x0888,0x0464,0x0008,0x0000,0x0000,0x0000,0x0000, // 69 E
   0x0080,0x0464,0x0008,0x0000,0x0000,0x0000,0x0000,0x0000, // 70 F
   0x4060,0x4484,0xc244,0xc044,0xe662,0x0000,0x0000,0x0000, // 71 G
   0x0008,0x8088,0x0484,0x0000,0x0000,0x0000,0x0000,0x0000, // 72 H
   0x2060,0x2868,0x4048,0x0000,0x0000,0x0000,0x0000,0x0000, // 73 I
   0x2060,0x4046,0xa026,0x0000,0x0000,0x0000,0x0000,0x0000, // 74 J
   0x0008,0x0480,0x2388,0x0000,0x0000,0x0000,0x0000,0x0000, // 75 K
   0x0008,0x0888,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 76 L
   0x0008,0x8088,0x0048,0x4880,0x0000,0x0000,0x0000,0x0000, // 77 M
   0x0008,0x0088,0x8088,0x0000,0x0000,0x0000,0x0000,0x0000, // 78 N
   0xc244,0xc644,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 79 O
   0x0008,0x0060,0x0464,0xa662,0x0000,0x0000,0x0000,0x0000, // 80 P
   0xc244,0xc644,0x6688,0x0000,0x0000,0x0000,0x0000,0x0000, // 81 Q
   0x0008,0x0060,0x0464,0x5488,0xa662,0x0000,0x0000,0x0000, // 82 R
   0x2060,0x2464,0x2868,0xa222,0xa666,0xe662,0xe226,0x0000, // 83 S
   0x0080,0x4048,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 84 T
   0x0004,0x8084,0xc044,0x0000,0x0000,0x0000,0x0000,0x0000, // 85 U
   0x0048,0x4880,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 86 V
   0x0028,0x2844,0x4468,0x6880,0x0000,0x0000,0x0000,0x0000, // 87 W
   0x0088,0x8008,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 88 X
   0x0044,0x4480,0x4448,0x0000,0x0000,0x0000,0x0000,0x0000, // 89 Y
   0x0080,0x8008,0x0888,0x0000,0x0000,0x0000,0x0000,0x0000, // 90 Z
   0x6020,0x2028,0x2868,0x0000,0x0000,0x0000,0x0000,0x0000, // 91 [
   0x0088,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 92 backslash
   0x2060,0x6068,0x6828,0x0000,0x0000,0x0000,0x0000,0x0000, // 93 ]
   0x2340,0x4063,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 94 ^
   0x0888,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 95 _
   0x4041,0xd251,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, // 96 `
   0x9237,0x3868,0x6568,0x3666,0x3454,0xd655,0xd435,0xd067, // 97 a
   0xa646,0x3444,0x3848,0x2228,0xd435,0xd237,0x0000,0x0000, // 98 b
   0xa246,0x4454,0x4858,0xd655,0xd057,0x0000,0x0000,0x0000, // 99 c
   0xa246,0x4454,0x4858,0x6268,0xd655,0xd057,0x0000,0x0000, //100 d
   0xa246,0xa446,0x4858,0x2666,0xd057,0x0000,0x0000,0x0000, //101 e
   0x9453,0x4348,0x3555,0x0000,0x0000,0x0000,0x0000,0x0000, //102 f
   0xa246,0x4454,0x4858,0x6468,0xe048,0x4a2a,0xd655,0xd057, //103 g
   0x2228,0xa446,0x6668,0x0000,0x0000,0x0000,0x0000,0x0000, //104 h
   0x4448,0x4242,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, //105 i
   0x4448,0x9038,0x4242,0x0000,0x0000,0x0000,0x0000,0x0000, //106 j
   0x2228,0x2653,0x3568,0x0000,0x0000,0x0000,0x0000,0x0000, //107 k
   0x4248,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, //108 l
   0x9435,0x9455,0x2428,0x4548,0x6568,0x0000,0x0000,0x0000, //109 m
   0xa446,0x2428,0x6668,0x0000,0x0000,0x0000,0x0000,0x0000, //110 n
   0xa246,0xa646,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, //111 o
   0xa646,0x3444,0x3848,0x242a,0xd435,0xd237,0x0000,0x0000, //112 p
   0xa246,0x4454,0x4858,0x646a,0x6a79,0xd655,0xd057,0x0000, //113 q
   0x2824,0xe446,0x4454,0xd655,0x0000,0x0000,0x0000,0x0000, //114 r
   0x9235,0x9657,0x3454,0x3656,0x3858,0xd655,0xd237,0x0000, //115 s
   0x4248,0x2464,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, //116 t
   0xa046,0x2624,0x6468,0x0000,0x0000,0x0000,0x0000,0x0000, //117 u
   0x2448,0x4864,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, //118 v
   0x2438,0x3844,0x4458,0x5864,0x0000,0x0000,0x0000,0x0000, //119 w
   0x2468,0x6428,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, //120 x
   0x2448,0x6448,0xe028,0x0000,0x0000,0x0000,0x0000,0x0000, //121 y
   0x2464,0x6428,0x2868,0x0000,0x0000,0x0000,0x0000,0x0000, //122 z
   0x6040,0xd441,0x3133,0x3537,0xd247,0x4868,0x9234,0x0000, //123 {
   0x4043,0x4548,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, //124 |
   0x2040,0xd641,0x5153,0x5557,0xd047,0x4828,0x9654,0x0000, //125 }
   0x9432,0x9052,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000, //126 ~
   0x4173,0x7377,0x7717,0x1713,0x1341,0x0000,0x0000,0x0000, //127
};

()
{
   static phrase[256];

   cls(0);
   for(j=32;j<128;j+=16)
   {
      for(i=0;i<16;i++) { phrase[i] = i+j; } phrase[i] = 0;
      sc = (xres-4*16)/16;
      letterprint(phrase,0,(j-32)*(sc/16+1)+8,sc,mousx/xres*8,int(mousy/yres*6+2)*2);
   }
   Sleep(15);
}

letterprint (phrase[256], x, y, r, thick, n)
{
   rr = r/10; pon = PI/n;
   for(i=0;phrase[i];i++,x+=r+4)
   {
         //These 5 lines for debug only!
      if (!(bstatus%2))
      {
         setcol(0x807060);
         for(xx=1;xx<9;xx++) { moveto(x+xx*rr,y); lineto(x+xx*rr,y+r); }
         for(yy=1;yy<9;yy++) { moveto(x,y+yy*rr); lineto(x+r,y+yy*rr); }
         setcol(0xffe0c0); moveto(x,y); lineto(x+r,y);
         lineto(x+r,y+r); lineto(x,y+r); lineto(x,y);
      }
      setcol(0xffffff);
      for(j=0,c=phrase[i]-32;(j<8) && (lett[c][j]);j++)
      {
         i0 = int(lett[c][j]/16^3)%16;
         i1 = int(lett[c][j]/16^2)%16;
         i2 = int(lett[c][j]/16^1)%16;
         i3 = int(lett[c][j]/16^0)%16;
         if (i0 <= 8)
         {
            drawcone(i0*rr+x,i1*rr+y,thick,i2*rr+x,i3*rr+y,thick);
            continue;
         }
         if (i0 > 12) { nn = n/2; i0 -= 12; if (i0 == 3) i0 = 5; }
                 else { nn = n  ; i0 -=  8; }
         xx = i2*rr+x; yy = i3*rr+y; r2 = rr*i0; a = i1*(PI/4);
         for(k=nn-1;k>=0;k--)
            drawcone(cos((k+0)*pon+a)*r2+xx,sin((k+0)*pon+a)*r2+yy,thick,
                     cos((k+1)*pon+a)*r2+xx,sin((k+1)*pon+a)*r2+yy,thick);
      }
   }
}