() cls(0); setcol(0xffffff);
static sx, sy, mx, my;
if (sx == 0) { sx = 1/3; sy = 1/3; mx = 2/3; my = 2/3; }
if ((bstatus%2) == 1) { sx = mousx/xres; sy = mousy/yres; }
if (bstatus >= 2)     { mx = mousx/xres; my = mousy/yres; }

   //n must be <= 22 (for arrsiz=1024)
enum {n=8,arrsiz=1024} //n, arrsiz must be >= (n+1)*n*2+1
static px[arrsiz], py[arrsiz], vol[arrsiz];
cnt = 0;
for(y=-n;y<=n;y++)
   for(x=-n;x<=n;x++)
   {
      if (abs(x)+abs(y) > n) continue;
      if (x%2 < 1) ax = x+sx; else ax = x+1-sx;
      if (y%2 < 1) ay = y+sy; else ay = y+1-sy;
         //(ax,ay)-(mx,my)
      i = 256/sqrt((ax-mx)^2+(ay-my)^2);
      px[cnt] = x; py[cnt] = y; vol[cnt] = i; cnt++;
   }

   //Sort points by vol
for(gap=int(cnt/2);gap;gap=int(gap/2))
   for(i=0;i<cnt-gap;i++)
      for(j=i;j>=0;j-=gap)
      {
         if (vol[j] <= vol[j+gap]) break;
         k = px[j]; px[j] = px[j+gap]; px[j+gap] = k;
         k = py[j]; py[j] = py[j+gap]; py[j+gap] = k;
         k = vol[j]; vol[j] = vol[j+gap]; vol[j+gap] = k;
      }

wl = 8;
tim = (klock(0)*32)%wl;
for(cc=0;cc<cnt;cc++)
{
   x = px[cc]; if (x%2 < 1) ax = x+sx; else ax = x+1-sx;
   y = py[cc]; if (y%2 < 1) ay = y+sy; else ay = y+1-sy;
   i = vol[cc]; setcol(i,i,i);
            
      //(ax,ay)-(sx,sy)
   nax = ax%2; if (nax >= 1) nax = 2-nax;
   nay = ay%2; if (nay >= 1) nay = 2-nay;
   ox = nax*xres; oy = nay*yres;
   ix = floor(ax)+(mx>ax); vx = sgn(mx-ax);
   iy = floor(ay)+(my>ay); vy = sgn(my-ay);
   c = abs(floor(mx)-floor(ax))+abs(floor(my)-floor(ay));
   t = tim;
   yx = (my-ay)/(mx-ax);
   xy = (mx-ax)/(my-ay);
   for(;c>0;c--)
   {
      nx0 = ix; ny0 = (nx0-ax)*yx+ay;
      ny1 = iy; nx1 = (ny1-ay)*xy+ax;
      if (abs(nx0-ax)+abs(ny0-ay) < abs(nx1-ax)+abs(ny1-ay))
           { nx = nx0; ny = ny0; ix += vx; }
      else { nx = nx1; ny = ny1; iy += vy; }
      nx %= 2; if (nx >= 1) nx = 2-nx;
      ny %= 2; if (ny >= 1) ny = 2-ny;
      nx *= xres; ny *= yres;
      
      d = sqrt((nx-ox)^2+(ny-oy)^2); rd = 1/d;
      nox = (nx-ox)*rd; noy = (ny-oy)*rd;
      for(;t<d;t+=wl) setpix(nox*t+ox,noy*t+oy);
      t -= d;
     
      ox = nx; oy = ny;
   }
   nx = mx*xres; ny = my*yres;
   
   d = sqrt((nx-ox)^2+(ny-oy)^2); rd = 1/d;
   nox = (nx-ox)*rd; noy = (ny-oy)*rd;
   for(;t<d;t+=wl) setpix(nox*t+ox,noy*t+oy);
   t -= d;
}
0