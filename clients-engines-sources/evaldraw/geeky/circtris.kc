()
MODE = 0; //0:show triangles, 1=show texture
RES = min(max(int(mousx*32/xres),1),32); //1..~72
glcullface(GL_NONE);

clz(1e32); cls(0); setcol(0xffffff);

static rr[2], aa[2], ai[2], nn[2];
t = klock(); setcam(0,sin(t)*-2,cos(t)*-2,0,t);

glbegin(GL_TRIANGLES);
dr = 1/RES; cnt = 0;
for(rr[0]=0,ir=0;ir<RES;ir++,rr[0]=rr[1])
{
   rr[1] = rr[0]+dr;
   for(i=2-1;i>=0;i--)
   {
      nn[i] = int(sin(rr[i]*(PI/2))*4/dr);
      ai[i] = PI*2/nn[i]; aa[i] = 0;
   }
   for(i=nn[0]+nn[1];i>0;i--)
   {
      if (MODE == 0)
      {
         c = cnt*0xa86420; k = 256;
         setcol(c%k+64,(c/k)%k+64,(c/k^2)%k+64);
      }
      
      x = cos(aa[0]); z = cos(rr[0]*(PI/2));
      y = sin(aa[0]); r = sin(rr[0]*(PI/2));
      gltexcoord(x*rr[0]*MODE,y*rr[0]*MODE);
      glvertex(x*r,y*r,z);
      
      x = cos(aa[1]); z = cos(rr[1]*(PI/2));
      y = sin(aa[1]); r = sin(rr[1]*(PI/2));
      gltexcoord(x*rr[1]*MODE,y*rr[1]*MODE);
      glvertex(x*r,y*r,z);
            
      k = (aa[0]*2+ai[0] >= aa[1]*2+ai[1]);
      aa[k] += ai[k];
      
      x = cos(aa[k]); z = cos(rr[k]*(PI/2));
      y = sin(aa[k]); r = sin(rr[k]*(PI/2));
      gltexcoord(x*rr[k]*MODE,y*rr[k]*MODE);
      glvertex(x*r,y*r,z);
      
      cnt++;
   }
}
setcol(0xffffff);
moveto(xres-100,0); printf("%g: %g tris",RES,cnt);